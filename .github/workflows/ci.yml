name: Continuous integration

on:
  push:
    branches:
      - master
      - "feature/**"
      - "releases/**"
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

defaults:
  run:
    shell: bash

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-22.04, macos-latest, macos-14]
        go: [stable, 1.23.x, 1.22.x, 1.21.x]
    name: Go ${{ matrix.go }} tests @ ${{ matrix.os }} for hyperscan
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Linux dependencies for testing libraries
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install -yq libhyperscan-dev libpcap-dev

      - name: Install MacOS dependencies for testing libraries
        if: startsWith(matrix.os, 'macos-') 
        run: |
          brew install vectorscan libpcap

      - uses: actions/checkout@v4

      - name: Install Golang ${{ matrix.go }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Test Hyperscan v4 API
        run: |
          go test -v -tags hyperscan_v4 ./internal/hs/... ./hyperscan/...
          go test -race -v -tags hyperscan_v4 ./internal/hs/... ./hyperscan/...

      - name: Test Hyperscan v5 API
        run: |
          go test -v ./internal/hs/... ./hyperscan/...
          go test -race -v ./internal/hs/... ./hyperscan/...

  build-and-test:
    strategy:
      matrix:
        include:
          - os: macos-14
            go: stable
            hyperscan_version: 5.4.11
            pcre_version: 8.45
            build_flags: -tags hyperscan_v54,chimera
            chimera: true
            vectorscan: true
          - os: ubuntu-24.04
            go: stable
            hyperscan_version: 5.4.2
            pcre_version: 8.45
            build_flags: -tags hyperscan_v54,chimera
            chimera: true
            coverage: true
          - os: ubuntu-22.04
            go: stable
            hyperscan_version: 5.2.1
            pcre_version: 8.45
            build_flags: -tags hyperscan_v52,chimera
            chimera: true
    name: Go ${{ matrix.go }} tests @ ${{ matrix.os }} for hyperscan ${{ matrix.hyperscan_version }}
    runs-on: ${{ matrix.os }}
    env:
      PKG_CONFIG_PATH: ${{ github.workspace }}/dist/lib/pkgconfig
      CGO_CFLAGS: -I${{ github.workspace }}/dist/include/hs
      CGO_LDFLAGS: -L${{ github.workspace }}/dist/lib
    steps:
      - uses: actions/checkout@v4

      - name: Install Hyperscan ${{ matrix.hyperscan }} with PCRE ${{ matrix.pcre_version }}
        uses: flier/install-hyperscan@main
        with:
          hyperscan_version: ${{ matrix.hyperscan_version }}
          pcre_version: ${{ matrix.pcre_version }}
          vectorscan: ${{ matrix.vectorscan }}
          build_static_lib: on
          src_dir: ${{ runner.temp }}/hyperscan/
          install_prefix: ${{ github.workspace }}/dist/
          cache_key: ${{ runner.os }}-build-hyperscan-${{ matrix.vectorscan }}-${{ matrix.hyperscan_version }}-pcre-${{ matrix.pcre_version }}

      - name: Install Golang ${{ matrix.go }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Test Hyperscan API
        run: |
          go test -v ${{ matrix.build_flags }} ./internal/hs/... ./hyperscan/...
          go test -race -v ${{ matrix.build_flags }} ./internal/hs/... ./hyperscan/...

      - name: Test Chimera API
        if: matrix.chimera
        run: |
          go test -v ${{ matrix.build_flags }} ./internal/ch/... ./chimera/...
          go test -race -v ${{ matrix.build_flags }} ./internal/ch/... ./chimera/...

      - name: Run and upload coverage to Codecov
        if: matrix.coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          go test -v ${{ matrix.build_flags }} -race -coverprofile=coverage.out -covermode=atomic ./...
          bash <(curl -s https://codecov.io/bash)
